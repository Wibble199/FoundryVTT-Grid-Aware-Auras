{
	"GRIDAWAREAURAS": {
		"Aura": "Aura",
		"AuraDisplayCustom": "Custom",
		"AuraDisplayDrag": "When Dragging",
		"AuraDisplayOwnerTurn": "Combat Turn for Anyone",
		"AuraDisplayTurn": "Combat Turn for Owner",
		"Auras": "Auras",
		"EffectModeApplyOnEnter": "Apply on enter",
		"EffectModeApplyOnLeave": "Apply on leave",
		"EffectModeApplyOnOwnerTurnEnd": "Apply on owner turn end",
		"EffectModeApplyOnOwnerTurnStart": "Apply on owner turn start",
		"EffectModeApplyOnRoundEnd": "Apply on round end",
		"EffectModeApplyOnRoundStart": "Apply on round start",
		"EffectModeApplyOnTargetTurnEnd": "Apply on target turn end",
		"EffectModeApplyOnTargetTurnStart": "Apply on target turn start",
		"EffectModeApplyWhileInside": "Apply while inside (remove on leave)",
		"EffectModeRemoveOnEnter": "Remove on enter",
		"EffectModeRemoveOnLeave": "Remove on leave",
		"EffectModeRemoveOnOwnerTurnEnd": "Remove on owner turn end",
		"EffectModeRemoveOnOwnerTurnStart": "Remove on owner turn start",
		"EffectModeRemoveOnRoundEnd": "Remove on round end",
		"EffectModeRemoveOnRoundStart": "Remove on round start",
		"EffectModeRemoveOnTargetTurnEnd": "Remove on target turn end",
		"EffectModeRemoveOnTargetTurnStart": "Remove on target turn start",
		"EffectModeRemoveWhileInside": "Remove while inside",
		"LineType": "Line Type",
		"LineTypeDashed": "Dashed",
		"LineTypeNone": "None",
		"LineTypeSolid": "Solid",
		"MacroModeEnter": "Token Enter",
		"MacroModeEnterLeave": "Token Enter/Leave",
		"MacroModeLeave": "Token Leave",
		"MacroModeOwnerTurnEnd": "Owner Turn End",
		"MacroModeOwnerTurnStart": "Owner Turn Start",
		"MacroModeOwnerTurnStartEnd": "Owner Turn Start/End",
		"MacroModePreviewEnter": "Token Preview Enter",
		"MacroModePreviewEnterLeave": "Token Preview Enter/Leave",
		"MacroModePreviewLeave": "Token Preview Leave",
		"MacroModeRoundEnd": "Round End",
		"MacroModeRoundStart": "Round Start",
		"MacroModeRoundStartEnd": "Round Start/End",
		"MacroModeTargetTurnEnd": "Target Turn End",
		"MacroModeTargetTurnStart": "Target Turn Start",
		"MacroModeTargetTurnStartEnd": "Target Turn Start/End",
		"Radius.Hint": "<p>This can either be a number, or the name of a field on the actor or item.</p><p>For fields on the actor, prefix it with <code>actor.</code> - for example if you were using the Lancer system you could use <code>actor.system.sensor_range</code> to have a radius equal to the mech's sensor range.</p><p>For auras on items, the aforementioned 'actor' will point to the actor that owns the item. There is also <code>item</code> available in the context. E.G. if you were using Lancer, you could set the radius of an aura on a weapon to <code>item.system.profiles.0.range.0.val</code> to match the weapon's range.</p>",
		"SequenceEasingEaseIn": "Ease in",
		"SequenceEasingEaseInOut": "Ease in and out",
		"SequenceEasingEaseOut": "Ease out",
		"SequenceEasingLinear": "Linear",
		"SequencePositionFromOwnerToTarget": "From owner to target (ranged)",
		"SequencePositionFromTargetToOwner": "From target to owner (ranged)",
		"SequencePositionOnOwner": "On owner",
		"SequencePositionOnTarget": "On target",
		"SequenceTriggerOnEnter": "On enter",
		"SequenceTriggerOnLeave": "On leave",
		"SequenceTriggerWhileInside": "While inside",
		"SquareGridModeAlternating": "Alternating (1/2/1)",
		"SquareGridModeEquidistant": "Equidistant (1/1/1)",
		"SquareGridModeExact": "Exact (√2/√2/√2)",
		"SquareGridModeManhattan": "Manhattan (2/2/2)",
		"TabAutomation": "Automation",
		"TabFill": "Fill",
		"TabLines": "Lines",
		"TabVisibility": "Visibility",
		"ThtRulerOnDragModeC2C": "Centre Only",
		"ThtRulerOnDragModeE2E": "Centre and Edge",
		"ThtRulerOnDragModeNone": "Don't show",
		"UnresolvedRadiusConfigDialogWarning": "The path provided does not result in a number.",
		"UnresolvedRadiusTableWarning": "<p>The property referenced by this aura ({path}) does not result in a number.</p><p>Please check the path and ensure you are using 'actor.' or 'item.' prefixes as appropriate.</p>"
	},
	"SETTINGS": {
		"CustomAuraTargetFilters.Name": "Custom Aura Target Filters",
		"CustomAuraTargetFilters.Hint": "Create/edit custom filters which can be used when setting up automation for auras.",
		"CustomAuraTargetFilters.LongHint": "Some Grid-Aware Aura features (such as effects) allow for setting a 'Token Filter' which determines which tokens can be affected by the aura. This utility allows you to define additional custom filters beyond the three that are provided built-in.",
		"CustomAuraTargetFilters.LongHintLink": "See the documentation for more details.",
		"EnableEffectAutomation.Name": "Enable Effect Automation",
		"EnableEffectAutomation.Hint": "This will enable configuration options for auras to be able to automatically add or remove status effects from tokens when they enter/leave an aura. Note that this may require a GM user present to function correctly when the user that triggered the aura does not have ownership over an affected token.",
		"EnableMacroAutomation.Name": "Enable Macro Automation",
		"EnableMacroAutomation.Hint": "This will enable macros to be triggered by auras when tokens enter/leave their area. Note that by enabling this, it is possible for users to configure macros to be executed on other user's games. Make sure you understand the implications of this before turning this feature on.",
		"SquareGridMode.Name": "Square Grid Mode",
		"SquareGridMode.Hint": "Coordinate system to determine the shape of the aura when using square grids."
	},
	"TOKEN": {
		"TABS": {
			"gridAwareAuras": "Auras"
		}
	}
}
