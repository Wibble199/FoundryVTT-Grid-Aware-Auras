/* ------------------ */
/* Aura Config Window */
/* ------------------ */
.grid-aware-auras-aura-config hr {
	width: 100%;
	border-top: 2px groove #FFFFFF;
}

.grid-aware-auras-aura-config .visibility-grid {
	margin: 0 -0.625em;
}

.grid-aware-auras-aura-config .visibility-row {
	display: grid;
	grid-template-columns: 1fr repeat(2, 85px);
	grid-template-rows: min-content min-content;
	grid-template-areas:
		"title owner nonowner"
		"hint hint hint";
	align-items: center;
	padding: 4px 8px;
}

.grid-aware-auras-aura-config .visibility-row:nth-child(even) {
	background-color: rgba(0 0 0 / 5%);
}

.grid-aware-auras-aura-config .visibility-row > .hint {
	grid-area: hint;
}

.grid-aware-auras-aura-config .visibility-row > .title {
	grid-area: title;
	font-weight: bold;
}

.grid-aware-auras-aura-config .visibility-row > .owner {
	grid-area: owner;
	justify-self: center;
}

.grid-aware-auras-aura-config .visibility-row > .nonowner {
	grid-area: nonowner;
	justify-self: center;
}

/* Use a custom style to emulate disabled because we still want to include the inputs in the FormData */
.grid-aware-auras-aura-config fieldset.disabled {
	pointer-events: none;
	opacity: 0.4;
}

/* ---------------------- */
/* Token Config Aura List */
/* ---------------------- */
.grid-aware-auras-list {
	border: none;
	background: none;
}
.grid-aware-auras-list thead {
	background: none;
	border-bottom: none;
	color: inherit;
	text-shadow: none;
}

.icon-checkbox {
	display: inline-block;
	cursor: pointer;
}
.icon-checkbox > input {
	display: none;
}
.icon-checkbox:has(input:checked) > .icon-unchecked,
.icon-checkbox:has(input:not(:checked)) > .icon-checked {
	display: none;
}
.icon-checkbox:hover > i {
	text-shadow: 0 0 8px var(--color-shadow-primary);
}

/* ------- */
/* Utility */
/* ------- */
.text-bold {
	font-weight: bold;
}

.text-left {
	text-align: left;
}

.text-center {
	text-align: center;
}
